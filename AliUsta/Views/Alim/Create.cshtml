@model AliUsta.Models.AlimViewModel

@{
    ViewBag.Title = "Yeni Alım Ekle";
}

<div class="container mt-4">
    <h2>@ViewBag.Title</h2>
    <hr />

    @using (Html.BeginForm("Create", "Alim", FormMethod.Post, new { @class = "needs-validation", novalidate = "" }))
    {
        @Html.AntiForgeryToken()

        <div class="row g-3">
            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger col-12" })

            <div class="col-md-6">
                @Html.LabelFor(model => model.SelectedTedarikciID, htmlAttributes: new { @class = "form-label" })
                @Html.DropDownListFor(model => model.SelectedTedarikciID, Model.Tedarikciler, "-- Tedarikçi Seçiniz --", new { @class = "form-select", id = "TedarikciDropdown", required = "required" })
                @Html.ValidationMessageFor(model => model.SelectedTedarikciID, "", new { @class = "text-danger d-block" })
            </div>

            <div class="col-md-6">
                <label class="form-label">Malzeme</label>
                <p id="MalzemeAdiDisplay" class="form-control-plaintext bg-light p-2 rounded"><em>Tedarikçi seçildiğinde malzeme burada görünecektir.</em></p>
                <input type="hidden" id="MalzemeIDHidden_Client" name="MalzemeID_Client" />
            </div>

            <div class="col-md-6">
                @Html.LabelFor(model => model.Miktar, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Miktar, new { htmlAttributes = new { @class = "form-control", type = "number", min = "1", required = "required" } })
                @Html.ValidationMessageFor(model => model.Miktar, "", new { @class = "text-danger d-block" })
            </div>

            <div class="col-md-6">
                @Html.LabelFor(model => model.Tarih, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Tarih, new { htmlAttributes = new { @class = "form-control", type = "date", required = "required" } })
                @Html.ValidationMessageFor(model => model.Tarih, "", new { @class = "text-danger d-block" })
            </div>
        </div>

        <div class="mt-4">
            <button type="submit" class="btn btn-success">
                 Kaydet
            </button>
            @Html.ActionLink("Listeye Dön", "Index", null, new { @class = "btn btn-secondary" })
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval") 
    <script type="text/javascript">
        $(document).ready(function () {
            $('#TedarikciDropdown').change(function () {
                var selectedTedarikciId = $(this).val();
                var malzemeDisplay = $('#MalzemeAdiDisplay');
                var malzemeHidden = $('#MalzemeIDHidden_Client'); 

                if (selectedTedarikciId && selectedTedarikciId !== "") {
                    malzemeDisplay.html('<i>Yükleniyor...</i>');
                    $.ajax({
                        url: '@Url.Action("GetMalzemeForTedarikci", "Alim")',
                        type: 'GET',
                        data: { tedarikciId: selectedTedarikciId },
                        success: function (response) {
                            if (response.success) {
                                malzemeDisplay.text(response.malzemeAdi);
                                malzemeHidden.val(response.malzemeId);
                            } else {
                                malzemeDisplay.text(response.message || 'Malzeme bulunamadı.');
                                malzemeHidden.val('');
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            malzemeDisplay.text('Malzeme bilgisi alınamadı (Hata: ' + textStatus + ').');
                            malzemeHidden.val('');
                            console.error("AJAX Error: ", textStatus, errorThrown, jqXHR.responseText);
                        }
                    });
                } else {
                    malzemeDisplay.html('<em>Tedarikçi seçildiğinde malzeme burada görünecektir.</em>');
                    malzemeHidden.val('');
                }
            });

            if ($('#TedarikciDropdown').val() && $('#TedarikciDropdown').val() !== "") {
                $('#TedarikciDropdown').trigger('change');
            }

            (function () {
                'use strict'
                var forms = document.querySelectorAll('.needs-validation')
                Array.prototype.slice.call(forms)
                    .forEach(function (form) {
                        form.addEventListener('submit', function (event) {
                            if (!form.checkValidity()) {
                                event.preventDefault()
                                event.stopPropagation()
                            }
                            form.classList.add('was-validated')
                        }, false)
                    })
            })()
        });
    </script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
}